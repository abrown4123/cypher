{"version":3,"sources":["App.js","index.js"],"names":["App","useState","cypherTerm","setCypherTerm","className","value","onChange","event","target","code","cypher","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","string","toLowerCase","split","cracked","forEach","word","newWord","letter","push","join","codeBreaker","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAyDeA,EAvDH,WAEV,MAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KA4CA,OACE,sBAAKC,UAAU,MAAf,UACE,sDADF,iBAEgB,uBAAOC,MAAOH,EAAYI,SA7ClB,SAACC,GAAD,OAAWJ,EAAcI,EAAMC,OAAOH,UA8C5D,4BA5CgB,SAACI,GACnB,IAAIC,EAAS,CACTC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAEHC,EAASnC,EAAWoC,cAAcC,MAAM,KACxCC,EAAU,GAOd,OALAH,EAAOI,SAAQ,SAAAC,GACX,IAAIC,EAAU,GACdD,EAAKH,MAAM,IAAIE,SAAQ,SAAAG,GAAM,OAAID,EAAQE,KAAKnC,EAAOkC,OACrDJ,EAAQK,KAAKF,EAAQG,KAAK,QAEvBN,EAAQM,KAAK,KAOdC,SC/CVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ab238a48.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n\n  const [ cypherTerm, setCypherTerm ] = useState(\"\");\n\n  const handleCypherInput = (event) => setCypherTerm(event.target.value); \n\n  const codeBreaker = (code) => {\n    let cypher = {\n        a: \"z\",\n        b: \"y\",\n        c: \"x\",\n        d: \"w\",\n        e: \"v\",\n        f: \"u\",\n        g: \"t\",\n        h: \"s\",\n        i: \"r\",\n        j: \"q\",\n        k: \"p\",\n        l: \"o\",\n        m: \"n\",\n        n: \"m\",\n        o: \"l\",\n        p: \"k\",\n        q: \"j\",\n        r: \"i\",\n        s: \"h\",\n        t: \"g\",\n        u: \"f\",\n        v: \"e\",\n        w: \"d\",\n        x: \"c\",\n        y: \"b\",\n        z: \"a\"\n    }\n    let string = cypherTerm.toLowerCase().split(\" \");\n    let cracked = [];\n  \n    string.forEach(word => {\n        let newWord = [];\n        word.split(\"\").forEach(letter => newWord.push(cypher[letter]));\n        cracked.push(newWord.join(\"\"));\n    });\n    return cracked.join(\" \");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Hunt-A-Killer Cypher</h1>\n      input cypher: <input value={cypherTerm} onChange={handleCypherInput} />\n      <p>{codeBreaker(cypherTerm)}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}